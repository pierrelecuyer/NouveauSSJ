digraph "InverseGaussianProcess"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="InverseGaussianProcess",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="StochasticProcess",height=0.2,width=0.4,color="black",URL="$d9/d28/classumontreal_1_1ssj_1_1stochprocess_1_1StochasticProcess.html",tooltip="Abstract base class for a stochastic process  sampled (or observed) at a finite number of time points..."];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="InverseGaussianProcessMSH",height=0.2,width=0.4,color="black",URL="$d0/d1f/classumontreal_1_1ssj_1_1stochprocess_1_1InverseGaussianProcessMSH.html",tooltip="Uses a faster generating method (MSH) â€‰ than the simple inversion of the distribution function used ..."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="InverseGaussianProcessBridge",height=0.2,width=0.4,color="black",URL="$d1/db9/classumontreal_1_1ssj_1_1stochprocess_1_1InverseGaussianProcessBridge.html",tooltip="Samples the path by bridge sampling: first finding the process value at the final time and then the m..."];
  Node0 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="InverseGaussianProcessPCA",height=0.2,width=0.4,color="black",URL="$d5/df7/classumontreal_1_1ssj_1_1stochprocess_1_1InverseGaussianProcessPCA.html",tooltip="Approximates a principal component analysis (PCA) decomposition of the InverseGaussianProcess. "];
}
