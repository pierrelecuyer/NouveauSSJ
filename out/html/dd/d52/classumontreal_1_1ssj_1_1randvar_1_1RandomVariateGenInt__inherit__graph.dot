digraph "RandomVariateGenInt"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="RandomVariateGenInt",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="RandomVariateGen",height=0.2,width=0.4,color="black",URL="$de/de0/classumontreal_1_1ssj_1_1randvar_1_1RandomVariateGen.html",tooltip="This is the base class for all random variate generators over the real line. "];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="BernoulliGen",height=0.2,width=0.4,color="black",URL="$df/dac/classumontreal_1_1ssj_1_1randvar_1_1BernoulliGen.html",tooltip="This class implements random variate generators for the Bernoulli distribution (see class umontreal..."];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="BinomialGen",height=0.2,width=0.4,color="black",URL="$d7/dd7/classumontreal_1_1ssj_1_1randvar_1_1BinomialGen.html",tooltip="This class implements random variate generators for the binomial distribution. "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="BinomialConvolutionGen",height=0.2,width=0.4,color="black",URL="$da/dc1/classumontreal_1_1ssj_1_1randvar_1_1BinomialConvolutionGen.html",tooltip="Implements binomial random variate generators using the convolution method. "];
  Node0 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="GeometricGen",height=0.2,width=0.4,color="black",URL="$d2/dab/classumontreal_1_1ssj_1_1randvar_1_1GeometricGen.html",tooltip="This class implements a random variate generator for the geometric distribution. "];
  Node0 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="HypergeometricGen",height=0.2,width=0.4,color="black",URL="$de/de2/classumontreal_1_1ssj_1_1randvar_1_1HypergeometricGen.html",tooltip="This class implements random variate generators for the hypergeometric distribution. "];
  Node0 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="LogarithmicGen",height=0.2,width=0.4,color="black",URL="$d4/dcd/classumontreal_1_1ssj_1_1randvar_1_1LogarithmicGen.html",tooltip="This class implements random variate generators for the (discrete) logarithmic distribution. "];
  Node0 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="NegativeBinomialGen",height=0.2,width=0.4,color="black",URL="$d4/da6/classumontreal_1_1ssj_1_1randvar_1_1NegativeBinomialGen.html",tooltip="This class implements random variate generators having the negative binomial distribution. "];
  Node0 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="PascalGen",height=0.2,width=0.4,color="black",URL="$db/d93/classumontreal_1_1ssj_1_1randvar_1_1PascalGen.html",tooltip="Implements Pascal random variate generators, which is a special case of the negative binomial generat..."];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="PascalConvolutionGen",height=0.2,width=0.4,color="black",URL="$d2/dc1/classumontreal_1_1ssj_1_1randvar_1_1PascalConvolutionGen.html",tooltip="Implements Pascal random variate generators by the convolution method (see â€‰). "];
  Node0 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="PoissonGen",height=0.2,width=0.4,color="black",URL="$dd/d87/classumontreal_1_1ssj_1_1randvar_1_1PoissonGen.html",tooltip="This class implements random variate generators having the Poisson distribution. "];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="PoissonTIACGen",height=0.2,width=0.4,color="black",URL="$da/de8/classumontreal_1_1ssj_1_1randvar_1_1PoissonTIACGen.html",tooltip="This class implements random variate generators having the Poisson distribution (see PoissonGen )..."];
  Node0 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="UniformIntGen",height=0.2,width=0.4,color="black",URL="$d3/de3/classumontreal_1_1ssj_1_1randvar_1_1UniformIntGen.html",tooltip="This class implements a random variate generator for the uniform distribution over integers..."];
  Node0 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="UnuranDiscreteInt",height=0.2,width=0.4,color="black",URL="$d0/d8e/classumontreal_1_1ssj_1_1randvar_1_1UnuranDiscreteInt.html",tooltip="This class permits one to create a discrete univariate generator using UNURAN via its string API..."];
}
