digraph "RandomStream"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="RandomStream",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="PointSetIterator",height=0.2,width=0.4,color="black",URL="$d7/d29/interfaceumontreal_1_1ssj_1_1hups_1_1PointSetIterator.html",tooltip="This is the interface for iterators that permit one to go through the points of a #PointSet and the s..."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="PointSet.DefaultPointSet\lIterator",height=0.2,width=0.4,color="black",URL="$db/d38/classumontreal_1_1ssj_1_1hups_1_1PointSet_1_1DefaultPointSetIterator.html",tooltip="This class implements a default point set iterator. "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="CachedPointSet.CachedPoint\lSetIterator",height=0.2,width=0.4,color="black",URL="$d1/dc4/classumontreal_1_1ssj_1_1hups_1_1CachedPointSet_1_1CachedPointSetIterator.html",tooltip="This class implements a CachedPointSet iterator which takes the value directly in the array x in whic..."];
  Node2 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="DigitalNet.DigitalNetIterator",height=0.2,width=0.4,color="black",URL="$d8/d56/classumontreal_1_1ssj_1_1hups_1_1DigitalNet_1_1DigitalNetIterator.html"];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="DigitalNet.DigitalNetIterator\lNoGray",height=0.2,width=0.4,color="black",URL="$d0/da6/classumontreal_1_1ssj_1_1hups_1_1DigitalNet_1_1DigitalNetIteratorNoGray.html"];
  Node2 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="PaddedPointSet.PaddedIterator",height=0.2,width=0.4,color="black",URL="$d3/d2d/classumontreal_1_1ssj_1_1hups_1_1PaddedPointSet_1_1PaddedIterator.html"];
  Node2 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="Rank1Lattice.Rank1Lattice\lIterator",height=0.2,width=0.4,color="black",URL="$d6/dee/classumontreal_1_1ssj_1_1hups_1_1Rank1Lattice_1_1Rank1LatticeIterator.html"];
  Node2 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="SortedAndCutPointSet.Sorted\lAndCutPointSetIterator",height=0.2,width=0.4,color="black",URL="$d8/dc7/classumontreal_1_1ssj_1_1hups_1_1SortedAndCutPointSet_1_1SortedAndCutPointSetIterator.html"];
  Node0 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="AntitheticStream",height=0.2,width=0.4,color="black",URL="$d9/d45/classumontreal_1_1ssj_1_1rng_1_1AntitheticStream.html",tooltip="This container class allows the user to force any RandomStream to return antithetic variates..."];
  Node0 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="BakerTransformedStream",height=0.2,width=0.4,color="black",URL="$db/df3/classumontreal_1_1ssj_1_1rng_1_1BakerTransformedStream.html",tooltip="This container class permits one to apply the bakerâ€™s transformation to the output of any RandomStre..."];
  Node0 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="CloneableRandomStream",height=0.2,width=0.4,color="black",URL="$d1/d5f/interfaceumontreal_1_1ssj_1_1rng_1_1CloneableRandomStream.html",tooltip="CloneableRandomStream extends RandomStream and Cloneable. "];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="RandMrg",height=0.2,width=0.4,color="black",URL="$d5/ddb/classumontreal_1_1ssj_1_1rng_1_1RandMrg.html",tooltip="USE MRG32k3a INSTEAD of this class. "];
  Node11 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="RandomStreamBase",height=0.2,width=0.4,color="black",URL="$d1/dbe/classumontreal_1_1ssj_1_1rng_1_1RandomStreamBase.html",tooltip="This class provides a convenient foundation on which RNGs can be built. "];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="MathematicaSWB",height=0.2,width=0.4,color="black",URL="$dc/da1/classift6561examples_1_1MathematicaSWB.html"];
  Node13 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="SplitStream",height=0.2,width=0.4,color="black",URL="$de/d91/classumontreal_1_1ssj_1_1mcqmctools_1_1anova_1_1SplitStream.html",tooltip="Implements a random stream that mixes two input streams by using a coordinate mask. "];
  Node13 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="GenF2w32",height=0.2,width=0.4,color="black",URL="$d5/d97/classumontreal_1_1ssj_1_1rng_1_1GenF2w32.html",tooltip="Implements the RandomStream interface via inheritance from RandomStreamBase. "];
  Node13 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="LFSR113",height=0.2,width=0.4,color="black",URL="$da/dba/classumontreal_1_1ssj_1_1rng_1_1LFSR113.html",tooltip="Extends RandomStreamBase using a composite linear feedback shift register (LFSR) (or Tausworthe) RNG ..."];
  Node13 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="LFSR258",height=0.2,width=0.4,color="black",URL="$d0/df1/classumontreal_1_1ssj_1_1rng_1_1LFSR258.html",tooltip="Extends RandomStreamBase using a 64-bit composite linear feedback shift register (LFSR) (or Tausworth..."];
  Node13 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="MRG31k3p",height=0.2,width=0.4,color="black",URL="$df/d8a/classumontreal_1_1ssj_1_1rng_1_1MRG31k3p.html",tooltip="Extends the abstract class RandomStreamBase, thus implementing the RandomStream interface indirectly..."];
  Node13 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="MRG32k3a",height=0.2,width=0.4,color="black",URL="$da/d6a/classumontreal_1_1ssj_1_1rng_1_1MRG32k3a.html",tooltip="Extends the abstract class RandomStreamBase by using as a backbone (or main) generator the combined m..."];
  Node13 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="MRG32k3aL",height=0.2,width=0.4,color="black",URL="$d8/d0d/classumontreal_1_1ssj_1_1rng_1_1MRG32k3aL.html",tooltip="The same generator as MRG32k3a, except here it is implemented with type long instead of double..."];
  Node13 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="MT19937",height=0.2,width=0.4,color="black",URL="$df/d21/classumontreal_1_1ssj_1_1rng_1_1MT19937.html",tooltip="Implements the RandomStream interface via inheritance from RandomStreamBase. "];
  Node13 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="RandRijndael",height=0.2,width=0.4,color="black",URL="$d9/d2d/classumontreal_1_1ssj_1_1rng_1_1RandRijndael.html",tooltip="Implements a RNG using the Rijndael block cipher algorithm (AES) with key and block lengths of 128 bi..."];
  Node13 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="WELL1024",height=0.2,width=0.4,color="black",URL="$d0/d45/classumontreal_1_1ssj_1_1rng_1_1WELL1024.html",tooltip="Implements the RandomStream interface via inheritance from RandomStreamBase. "];
  Node13 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="WELL512",height=0.2,width=0.4,color="black",URL="$d3/d0e/classumontreal_1_1ssj_1_1rng_1_1WELL512.html",tooltip="This class implements the RandomStream interface via inheritance from RandomStreamBase. "];
  Node13 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="WELL607base",height=0.2,width=0.4,color="black",URL="$db/d07/classumontreal_1_1ssj_1_1rng_1_1WELL607base.html"];
  Node26 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="F2NL607",height=0.2,width=0.4,color="black",URL="$d5/d5b/classumontreal_1_1ssj_1_1rng_1_1F2NL607.html",tooltip="Implements the RandomStream interface by using as a backbone generator the combination of the WELL607..."];
  Node26 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="WELL607",height=0.2,width=0.4,color="black",URL="$da/dc3/classumontreal_1_1ssj_1_1rng_1_1WELL607.html",tooltip="This class implements the RandomStream interface via inheritance from RandomStreamBase. "];
  Node0 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="RandomStreamWithCache",height=0.2,width=0.4,color="black",URL="$d3/d34/classumontreal_1_1ssj_1_1rng_1_1RandomStreamWithCache.html",tooltip="This class represents a random stream whose uniforms are cached for more efficiency when using common..."];
  Node0 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="TruncatedRandomStream",height=0.2,width=0.4,color="black",URL="$d6/d31/classumontreal_1_1ssj_1_1rng_1_1TruncatedRandomStream.html",tooltip="Represents a container random stream generating numbers in an interval  instead of in ..."];
  Node0 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="InverseGaussianProcessMSH.\lNonRandomStream",height=0.2,width=0.4,color="black",URL="$db/d25/classumontreal_1_1ssj_1_1stochprocess_1_1InverseGaussianProcessMSH_1_1NonRandomStream.html",tooltip="NonRandomStream: Given a double array, this class will return those values as if it where a random st..."];
}
