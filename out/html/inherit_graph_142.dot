digraph "Graphical Class Hierarchy"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="PointSet",height=0.2,width=0.4,color="black",URL="$d8/d10/classumontreal_1_1ssj_1_1hups_1_1PointSet.html",tooltip="This abstract class represents a general point set. "];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="CachedPointSet",height=0.2,width=0.4,color="black",URL="$df/d86/classumontreal_1_1ssj_1_1hups_1_1CachedPointSet.html",tooltip="This container class caches a point set by precomputing and storing its points locally in an array..."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="IndependentPointsCached",height=0.2,width=0.4,color="black",URL="$d4/d8b/classumontreal_1_1ssj_1_1hups_1_1IndependentPointsCached.html",tooltip="Similar to IndependentPoints, but the points are all generated and stored (cached) when the point set..."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="LatinHypercube",height=0.2,width=0.4,color="black",URL="$dc/d02/classumontreal_1_1ssj_1_1hups_1_1LatinHypercube.html",tooltip="Implements Latin Hypercube Sampling (LHS) with  points in the -dimensional unit hypercube. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="SortedAndCutPointSet",height=0.2,width=0.4,color="black",URL="$de/dab/classumontreal_1_1ssj_1_1hups_1_1SortedAndCutPointSet.html",tooltip="This class is useful for the Array-RQMC method, in the situation where the Markov chain has a multidi..."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="StratifiedUnitCube",height=0.2,width=0.4,color="black",URL="$d2/dcf/classumontreal_1_1ssj_1_1hups_1_1StratifiedUnitCube.html",tooltip="This class implements a stratification of the unit cube in rectangular boxes of same size and orienta..."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="StratifiedUnitCubeAnti",height=0.2,width=0.4,color="black",URL="$d6/d9b/classumontreal_1_1ssj_1_1hups_1_1StratifiedUnitCubeAnti.html",tooltip="This class implements a stratification of the unit cube in rectangular boxes of same size and orienta..."];
  Node0 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="ContainerPointSet",height=0.2,width=0.4,color="black",URL="$d4/d02/classumontreal_1_1ssj_1_1hups_1_1ContainerPointSet.html",tooltip="This acts as a generic base class for all container classes that contain a point set and apply a spec..."];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="AntitheticPointSet",height=0.2,width=0.4,color="black",URL="$dc/d3d/classumontreal_1_1ssj_1_1hups_1_1AntitheticPointSet.html",tooltip="This container class provides antithetic versions of the contained points. "];
  Node7 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="BakerTransformedPointSet",height=0.2,width=0.4,color="black",URL="$db/d5e/classumontreal_1_1ssj_1_1hups_1_1BakerTransformedPointSet.html",tooltip="This container class embodies a point set to which a baker&#39;s transformation (also called a tent trans..."];
  Node7 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="RandShiftedMod1PointSet",height=0.2,width=0.4,color="black",URL="$db/df7/classumontreal_1_1ssj_1_1hups_1_1RandShiftedMod1PointSet.html",tooltip="This container class embodies an arbitrary point set and its iterator adds a random shift modulo 1 to..."];
  Node0 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="CycleBasedPointSet",height=0.2,width=0.4,color="black",URL="$d4/d45/classumontreal_1_1ssj_1_1hups_1_1CycleBasedPointSet.html",tooltip="This abstract class provides the basic structures for storing and manipulating a point set defined by..."];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="CycleBasedPointSetBase2",height=0.2,width=0.4,color="black",URL="$de/d58/classumontreal_1_1ssj_1_1hups_1_1CycleBasedPointSetBase2.html",tooltip="Similar to CycleBasedPointSet, except that the successive values in the cycles are stored as integers..."];
  Node12 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="CycleBasedLFSR",height=0.2,width=0.4,color="black",URL="$df/dcc/classumontreal_1_1ssj_1_1hups_1_1CycleBasedLFSR.html",tooltip="Linear feedback shift register (LFSR) random number generators , , , produce numbers by generating a ..."];
  Node12 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="F2wCycleBasedLFSR",height=0.2,width=0.4,color="black",URL="$d3/dce/classumontreal_1_1ssj_1_1hups_1_1F2wCycleBasedLFSR.html",tooltip="This class creates a point set based upon a linear feedback shift register sequence. "];
  Node12 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="F2wCycleBasedPolyLCG",height=0.2,width=0.4,color="black",URL="$dd/d76/classumontreal_1_1ssj_1_1hups_1_1F2wCycleBasedPolyLCG.html",tooltip="This class creates a point set based upon a linear congruential sequence in the finite field ..."];
  Node11 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="LCGPointSet",height=0.2,width=0.4,color="black",URL="$da/d7a/classumontreal_1_1ssj_1_1hups_1_1LCGPointSet.html",tooltip="Implements a recurrence-based point set defined via a linear congruential recurrence of the form  and..."];
  Node0 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="DigitalNet",height=0.2,width=0.4,color="black",URL="$de/d70/classumontreal_1_1ssj_1_1hups_1_1DigitalNet.html",tooltip="This class provides the basic structures for storing and manipulating linear digital nets in base ..."];
  Node17 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="DigitalNetBase2",height=0.2,width=0.4,color="black",URL="$d3/dd5/classumontreal_1_1ssj_1_1hups_1_1DigitalNetBase2.html",tooltip="A special case of DigitalNet for the base . "];
  Node18 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="DigitalNetBase2FromFile",height=0.2,width=0.4,color="black",URL="$df/d25/classumontreal_1_1ssj_1_1hups_1_1DigitalNetBase2FromFile.html",tooltip="This class permits one to read the parameters that define a digital net in base 2 either from a file..."];
  Node18 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="DigitalSequenceBase2",height=0.2,width=0.4,color="black",URL="$d6/dec/classumontreal_1_1ssj_1_1hups_1_1DigitalSequenceBase2.html",tooltip="This abstract class describes methods specific to digital sequences in base 2. "];
  Node20 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="NiedSequenceBase2",height=0.2,width=0.4,color="black",URL="$d0/d02/classumontreal_1_1ssj_1_1hups_1_1NiedSequenceBase2.html",tooltip="This class implements digital sequences constructed from the Niederreiter sequence in base 2..."];
  Node20 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="NiedXingSequenceBase2",height=0.2,width=0.4,color="black",URL="$db/dcc/classumontreal_1_1ssj_1_1hups_1_1NiedXingSequenceBase2.html",tooltip="This class implements digital sequences based on the Niederreiter-Xing sequence in base 2..."];
  Node20 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="SobolSequence",height=0.2,width=0.4,color="black",URL="$d6/ddf/classumontreal_1_1ssj_1_1hups_1_1SobolSequence.html",tooltip="This class implements digital nets and digital sequences in base 2 formed by the first  points of a S..."];
  Node18 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="F2wNetLFSR",height=0.2,width=0.4,color="black",URL="$d1/d86/classumontreal_1_1ssj_1_1hups_1_1F2wNetLFSR.html",tooltip="This class implements a digital net in base 2 starting from a linear feedback shift register generato..."];
  Node18 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="F2wNetPolyLCG",height=0.2,width=0.4,color="black",URL="$de/d8c/classumontreal_1_1ssj_1_1hups_1_1F2wNetPolyLCG.html",tooltip="This class implements a digital net in base 2 starting from a polynomial LCG in . ..."];
  Node18 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="DigitalNetSearch.Digital\lNetBase2FromLatNetBuilder",height=0.2,width=0.4,color="black",URL="$d1/d31/classumontreal_1_1ssj_1_1latnetbuilder_1_1DigitalNetSearch_1_1DigitalNetBase2FromLatNetBuilder.html",tooltip="Class for the construction od digital nets. "];
  Node17 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="DigitalNetFromFile",height=0.2,width=0.4,color="black",URL="$de/d86/classumontreal_1_1ssj_1_1hups_1_1DigitalNetFromFile.html",tooltip="This class allows us to read the parameters defining a digital net either from a file, or from a URL address on the World Wide Web. "];
  Node17 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="DigitalSequence",height=0.2,width=0.4,color="black",URL="$dd/d0d/classumontreal_1_1ssj_1_1hups_1_1DigitalSequence.html",tooltip="This abstract class describes methods specific to digital sequences. "];
  Node28 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="FaureSequence",height=0.2,width=0.4,color="black",URL="$d2/d22/classumontreal_1_1ssj_1_1hups_1_1FaureSequence.html",tooltip="This class implements digital nets or digital sequences formed by the first  points of the Faure sequ..."];
  Node0 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="HaltonSequence",height=0.2,width=0.4,color="black",URL="$d2/dc6/classumontreal_1_1ssj_1_1hups_1_1HaltonSequence.html",tooltip="This class implements the sequence of Halton  , which is essentially a modification of Hammersley ne..."];
  Node0 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="HammersleyPointSet",height=0.2,width=0.4,color="black",URL="$d4/d05/classumontreal_1_1ssj_1_1hups_1_1HammersleyPointSet.html",tooltip="This class implements Hammersley point sets, which are defined as follows. "];
  Node0 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="PaddedPointSet",height=0.2,width=0.4,color="black",URL="$d4/d88/classumontreal_1_1ssj_1_1hups_1_1PaddedPointSet.html",tooltip="This container class realizes padded point sets, constructed by taking some coordinates from a point ..."];
  Node0 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="Rank1Lattice",height=0.2,width=0.4,color="black",URL="$d4/d94/classumontreal_1_1ssj_1_1hups_1_1Rank1Lattice.html",tooltip="This class implements point sets specified by integration lattices of rank. "];
  Node33 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="KorobovLattice",height=0.2,width=0.4,color="black",URL="$dd/d26/classumontreal_1_1ssj_1_1hups_1_1KorobovLattice.html",tooltip="This class implements a Korobov lattice, which represents the same point set as in class LCGPointSet..."];
  Node34 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="KorobovLatticeSequence",height=0.2,width=0.4,color="black",URL="$dc/d22/classumontreal_1_1ssj_1_1hups_1_1KorobovLatticeSequence.html"];
  Node0 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="SubsetOfPointSet",height=0.2,width=0.4,color="black",URL="$d9/d1f/classumontreal_1_1ssj_1_1hups_1_1SubsetOfPointSet.html",tooltip="This container class permits one to select a subset of a point set. "];
}
